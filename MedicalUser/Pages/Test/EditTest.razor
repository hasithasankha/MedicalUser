@page "/Test/EditTest/{CurrentId}"
@using MedicalUser.Data
@using MedicalUser.Model;
@inject TestService testService
@inject NavigationManager navManger;


<h1>Edit Test</h1>
<hr />
<EditForm Model="@objTest" OnValidSubmit="@UpdateTest">
    <DataAnnotationsValidator/>
    <div class="row">
        <input type="hidden" @bind="objTest.TestId" />


        <div class="col-md-8">
            <div class="form-group">
                <label for="Test_Name" class="control-label">Test_Name</label>
                <input form="Test_Name" class="form-control" @bind="objTest.Test_Name" />
                <ValidationMessage For="@(() => objTest.Test_Name)"/>
            </div>

            <div class="form-group">
                <label for="Test_Description" class="control-label">Test_Description</label>
                <input form="Test_Description" class="form-control" @bind="objTest.Test_Description" />
                <ValidationMessage For="@(() => objTest.Test_Description)"/>
            </div>

           
        </div>
    </div>

    <div class="row">
        <div class="col-md-4">
            <button type="submit" class="btn btn-info" Style="margin-top:10px">Update</button>

            <button type="reset" class="btn btn-danger" Style="margin-top:10px" @onclick="@Cancel">Cancel</button>
        </div>
    </div>
</EditForm>



@code {
    [Parameter]
    public string CurrentId { get; set; }

    Test objTest = new Test();
    bool displayValidationErrorMessages = false;
    bool displayUserAddedToDB = false;

    protected override async Task OnInitializedAsync()
    {
        objTest = await Task.Run(() => testService.GetTestById(Convert.ToInt32(CurrentId)));
    }


    protected void UpdateTest()
    {
        displayUserAddedToDB = false;
        displayValidationErrorMessages = false;
        testService.UpdateTest(objTest);
        navManger.NavigateTo("Test/testList");
    }
    void Cancel()
    {
        displayUserAddedToDB = false;
        displayValidationErrorMessages = false;
        navManger.NavigateTo("Test/testList");
    }
}
